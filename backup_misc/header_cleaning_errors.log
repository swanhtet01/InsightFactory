[HeaderCleaner] Invalid mapping from LLM, using original headers. Error: invalid syntax (<unknown>, line 1)
LLM output: To clean and normalize the headers, we need to map the original headers to more meaningful and standardized names. Given the provided headers, it seems like the first header contains metadata about the production batch and date range, while the rest are unnamed. Without additional context, I'll assume a typical structure for a tyre production sheet and map the headers accordingly. Here's a possible mapping:

```python
header_mapping = {
    'Weekly  Bias Tyre Production  ( Batch No - 01 / 25 )  02 - 01 - 2025   to  03 - 01 - 2025': 'Batch Information',
    'Unnamed: 1': 'Date',
    'Unnamed: 2': 'Shift',
    'Unnamed: 3': 'Tyre Size',
    'Unnamed: 4': 'Tyre Type',
    'Unnamed: 5': 'Production Line',
    'Unnamed: 6': 'Spec Weight',
    'Unnamed: 7': 'Actual Weight',
    'Unnamed: 8': 'QC Status',
    'Unnamed: 9': 'Operator ID',
    'Unnamed: 10': 'Machine ID',
    'Unnamed: 11': 'Material Code',
    'Unnamed: 12': 'Material Batch',
    'Unnamed: 13': 'Curing Time',
    'Unnamed: 14': 'Curing Temperature',
    'Unnamed: 15': 'Inspection Result',
    'Unnamed: 16': 'Defect Code',
    'Unnamed: 17': 'Rework Status',
    'Unnamed: 18': 'Rework Reason',
    'Unnamed: 19': 'Scrap Status',
    'Unnamed: 20': 'Scrap Reason',
    'Unnamed: 21': 'Production Quantity',
    'Unnamed: 22': 'Good Quantity',
    'Unnamed: 23': 'Rejected Quantity',
    'Unnamed: 24': 'Rework Quantity',
    'Unnamed: 25': 'Scrap Quantity',
    'Unnamed: 26': 'Downtime Duration',
    'Unnamed: 27': 'Downtime Reason',
    'Unnamed: 28': 'Energy Consumption',
    'Unnamed: 29': 'Water Consumption',
    'Unnamed: 30': 'Air Consumption',
    'Unnamed: 31': 'Operator Comments',
    'Unnamed: 32': 'Supervisor Comments',
    'Unnamed: 33': 'Shift Leader',
    'Unnamed: 34': 'Production Manager',
    'Unnamed: 35': 'Quality Manager',
    'Unnamed: 36': 'Maintenance Manager',
    'Unnamed: 37': 'Logistics Manager',
    'Unnamed: 38': 'Safety Officer',
    'Unnamed: 39': 'Environmental Officer',
    'Unnamed: 40': 'Notes'
}
```

This mapping assumes a comprehensive set of typical production-related data points. Adjust the mapping based on the actual data and context available in your Excel sheet.
[HeaderCleaner] Invalid mapping from LLM, using original headers. Error: unterminated string literal (detected at line 3) (<unknown>, line 3)
LLM output: To clean and normalize the headers, we need to map them to standard English headers based on common tyre production data fields. Since most of the headers are "Unnamed" and don't provide specific information, we'll assume a typical structure for a tyre production report and map them accordingly.

Here's a possible mapping:

```python
header_mapping = {
    'Bias  Tyre Production Report (Daily) For Section - 07': 'Report Title',
    'Unnamed: 1': 'Date',
    'Unnamed: 2': 'Shift',
    'Unnamed: 3': 'Machine ID',
    'Unnamed: 4': 'Operator',
    'Unnamed: 5': 'Tyre Size',
    'Unnamed: 6': 'Tyre Type',
    'Unnamed: 7': 'Production Quantity',
    'Unnamed: 8': 'QC Passed',
    'Unnamed: 9': 'QC Failed',
    'Unnamed: 10': 'Spec Weight',
    'Unnamed: 11': 'Actual Weight',
    'Unnamed: 12': 'Material Used',
    'Unnamed: 13': 'Downtime (min)',
    'Unnamed: 14': 'Defects',
    'Unnamed: 15': 'Remarks',
    'Unnamed: 16': 'Supervisor',
    'Unnamed: 17': 'Shift Start Time',
    'Unnamed: 18': 'Shift End Time'
}
```

This mapping assumes a typical structure for a tyre production report. Adjustments may be needed based on the actual data and context of the report.
[HeaderCleaner] Invalid mapping from LLM, using original headers. Error: invalid syntax (<unknown>, line 1)
LLM output: To clean and normalize the headers, we need to map them to meaningful and standard English headers. Since the provided headers are mostly "Unnamed" and do not provide specific information, I'll assume a typical structure for a tyre production sheet. Here's a possible mapping based on common columns found in such datasets:

```python
header_mapping = {
    '2022  January': 'Date',
    'Unnamed: 1': 'Shift',
    'Unnamed: 2': 'Machine ID',
    'Unnamed: 3': 'Operator',
    'Unnamed: 4': 'Tyre Size',
    'Unnamed: 5': 'Tyre Type',
    'Unnamed: 6': 'Production Quantity',
    'Unnamed: 7': 'Defect Quantity',
    'Unnamed: 8': 'QC Passed',
    'Unnamed: 9': 'QC Failed',
    'Unnamed: 10': 'Spec Weight',
    'Unnamed: 11': 'Actual Weight',
    'Unnamed: 12': 'Spec Diameter',
    'Unnamed: 13': 'Actual Diameter',
    'Unnamed: 14': 'Spec Tread Depth',
    'Unnamed: 15': 'Actual Tread Depth',
    'Unnamed: 16': 'Spec Pressure',
    'Unnamed: 17': 'Actual Pressure',
    'Unnamed: 18': 'Material Batch',
    'Unnamed: 19': 'Curing Time',
    'Unnamed: 20': 'Curing Temperature',
    # Continue mapping as needed for other columns
    # Assuming the rest are additional QC metrics or production details
    'Unnamed: 21': 'QC Metric 1',
    'Unnamed: 22': 'QC Metric 2',
    'Unnamed: 23': 'QC Metric 3',
    'Unnamed: 24': 'QC Metric 4',
    'Unnamed: 25': 'QC Metric 5',
    'Unnamed: 26': 'QC Metric 6',
    'Unnamed: 27': 'QC Metric 7',
    'Unnamed: 28': 'QC Metric 8',
    'Unnamed: 29': 'QC Metric 9',
    'Unnamed: 30': 'QC Metric 10',
    'Unnamed: 31': 'QC Metric 11',
    'Unnamed: 32': 'QC Metric 12',
    'Unnamed: 33': 'QC Metric 13',
    'Unnamed: 34': 'QC Metric 14',
    'Unnamed: 35': 'QC Metric 15',
    'Unnamed: 36': 'QC Metric 16',
    'Unnamed: 37': 'QC Metric 17',
    'Unnamed: 38': 'QC Metric 18',
    'Unnamed: 39': 'QC Metric 19',
    'Unnamed: 40': 'QC Metric 20',
    'Unnamed: 41': 'QC Metric 21',
    'Unnamed: 42': 'QC Metric 22',
    'Unnamed: 43': 'QC Metric 23',
    'Unnamed: 44': 'QC Metric 24',
    'Unnamed: 45': 'QC Metric 25',
    'Unnamed: 46': 'QC Metric 26',
    'Unnamed: 47': 'QC Metric 27',
    'Unnamed: 48': 'QC Metric 28',
    'Unnamed: 49': 'QC Metric 29',
    'Unnamed: 50': 'QC Metric 30',
    'Unnamed: 51': 'QC Metric 31',
    'Unnamed: 52': 'QC Metric 32',
    'Unnamed: 53': 'QC Metric 33',
    'Unnamed: 54': 'QC Metric 34',
    'Unnamed: 55': 'QC Metric 35',
    'Unnamed: 56': 'QC Metric 36',
    'Unnamed: 57': 'QC Metric 37',
    'Unnamed: 58': 'QC Metric 38',
    'Unnamed: 59': 'QC Metric 39',
    'Unnamed: 60': 'QC Metric 40',
    'Unnamed: 61': 'QC Metric 41',
    'Unnamed: 62': 'QC Metric 42',
    'Unnamed: 63': 'QC Metric 43',
    'Unnamed: 64': 'QC Metric 44',
    'Unnamed: 65': 'QC Metric 45',
    'Unnamed: 66': 'QC Metric 46',
    'Unnamed: 67': 'QC Metric 47',
    'Unnamed: 68': 'QC Metric 48',
    'Unnamed: 69': 'QC Metric 49',
    'Unnamed: 70': 'QC Metric 50',
    'Unnamed: 71': 'QC Metric 51',
    'Unnamed: 72': 'QC Metric 52',
    'Unnamed: 73': 'QC Metric 53',
    'Unnamed: 74': 'QC Metric 54',
    'Unnamed: 75': 'QC Metric 55',
    'Unnamed: 76': 'QC Metric 56',
    'Unnamed: 77': 'QC Metric 57',
    'Unnamed: 78': 'QC Metric 58',
    'Unnamed: 79': 'QC Metric 59',
    'Unnamed: 80': 'QC Metric 60',
    'Unnamed: 81': 'QC Metric 61',
    'Unnamed: 82': 'QC Metric 62',
    'Unnamed: 83': 'QC Metric 63',
    'Unnamed: 84': 'QC Metric 64',
    'Unnamed: 85': 'QC Metric 65',
    'Unnamed: 86': 'QC Metric 66',
    'Unnamed: 87': 'QC Metric 67',
    'Unnamed: 88': 'QC Metric 68',
    'Unnamed: 89': 'QC Metric 69',
    'Unnamed: 90': 'QC Metric 70',
    'Unnamed: 91': 'QC Metric 71',
    'Unnamed: 92': 'QC Metric 72',
    'Unnamed: 93': 'QC Metric 73',
    'Unnamed: 94': 'QC Metric 74',
    'Unnamed: 95': 'QC Metric 75',
    'Unnamed: 96': 'QC Metric 76',
    'Unnamed: 97': 'QC Metric 77',
    'Unnamed: 98': 'QC Metric 78',
    'Unnamed: 99': 'QC Metric 79',
    'Unnamed: 100': 'QC Metric 80',
    'Unnamed: 101': 'QC Metric 81',
    'Unnamed: 102': 'QC Metric 82',
    'Unnamed: 103': 'QC Metric 83',
    'Unnamed: 104': 'QC Metric 84',
    'Unnamed: 105': 'QC Metric 85',
    'Unnamed: 106': 'QC Metric 86',
    'Unnamed: 107': 'QC Metric 87'
}
```

This mapping assumes a typical structure for a tyre production dataset. If you have specific information about what each column represents, you should adjust the mapping accordingly.
